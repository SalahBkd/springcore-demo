--Spring IoC
    the approach of outsourcing the construction and management of objects.

    Spring IoC is the mechanism to achieve loose-coupling between Objects dependencies.
    To achieve loose coupling and dynamic binding of the objects at runtime,
    objects dependencies are injected by other assembler objects.


--Dependency Injection
    the client delegates to calls to another object the responsibility of providing
    its dependencies.

--Bean scopes
    scope refers to the lifecycle of a bean
    how long does the bean live ?
    how many instances are created ?
    how the bean is shared ?
    by default is scope="singleton"


    prototype: new instance every time
    singleton: creates one instance per program
    session, request...etc

--Bean lifecycle
    we can add our custom code during bean initialization/destruction

--Annotations Configuration
    why ?
        XML configuration can be verbose
        annotations minimizes the XML configuration
    how ?
    compile-time & run-time annotations

    @Component
--DI with Annotations & Autowiring
    @Autowired & @Component

    field injection: java reflection

    which injection type i should use ?
        I'am using constructor injection.

    qualifiers for DI
        if we have multiple interface implementations and we want to use only one specific
        implementation we need to tell spring which one to use.



























